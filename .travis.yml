language: generic

jobs:
  include:
    - stage: Testing
      language: generic
      dist: bionic
      before_install:
        - sudo apt-get -y install wget
        - sudo apt-get -y install tar
      install:
        - wget https://storage.googleapis.com/flutter_infra/releases/beta/linux/flutter_linux_v1.15.17-beta.tar.xz
        - tar -xf flutter_linux_v1.15.17-beta.tar.xz
        - ./flutter/bin/flutter doctor
        - ./flutter/bin/flutter pub get
        - ./flutter/bin/cache/dart-sdk/bin/dartanalyzer lib | internal/static_analyzer.sh
      script:
        - echo "Begin script"
        - ./flutter/bin/flutter test
      cache:
        directories:
          - $HOME/.pub-cache


    - stage: Screenshots
      env:
        - Screenshots on Android
        - OS=linux
      language: generic
      dist: bionic      
      cache:
        directories:
          - ${HOME}/.pub-cache    
      before_install:
        - API=28
        - ABI=x86
        - GOO=default
        - ANDROID_TOOLS=4333796 # android-28
        - ANDROID_HOME=${HOME}/android-sdk
        - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
        - JDK="1.8" # the JDK used for running tests
        - TOOLS=${ANDROID_HOME}/tools
        - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
        - FLUTTER_CHANNEL=stable
        - FLUTTER_VERSION=1.9.1+hotfix.6-${FLUTTER_CHANNEL}
        - FLUTTER_HOME=${HOME}/flutter
        - PATH=${HOME}/.pub-cache/bin:${PATH}
        - PATH=${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin:${PATH}
        # kvm
        - sudo apt-get -y --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder > /dev/null
        # add travis user to groups
        - sudo adduser $USER libvirt
        - sudo adduser $USER kvm
        # Set up JDK 8 for Android SDK
        - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
        - export TARGET_JDK="${JDK}"
        - JDK="1.8" # used when running sdkmanager
        - source ~/.install-jdk-travis.sh
        - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        # Avoid harmless sdkmanager warning
        - mkdir ~/.android
        - echo 'count=0' > ~/.android/repositories.cfg
        # Accept licenses before installing components, no need to echo y for each component
        - yes | sdkmanager --licenses >/dev/null
      install:
        # Download SDK tools
        - sdkmanager "platform-tools" > /dev/null
        - sdkmanager "tools" > /dev/null
        - sdkmanager "build-tools;28.0.3" > /dev/null 
        - sdkmanager "platforms;android-$API" > /dev/null
        - sdkmanager "platforms;android-28" > /dev/null
        - sdkmanager "emulator" > /dev/null
        - sdkmanager "extras;android;m2repository" > /dev/null
        - sdkmanager "system-images;android-$API;$GOO;$ABI" > /dev/null 
        - echo no | avdmanager --verbose create avd --force -n test -k "system-images;android-$API;$GOO;$ABI"
        - EMU_PARAMS="
          -avd test
          -no-window
          -no-audio
          "
        - EMU_COMMAND="emulator-headless"
        - sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} ${EMU_PARAMS} &"
        - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz
        - tar xf flutter.tar.xz -C $(dirname ${FLUTTER_HOME})
        - rm flutter.tar.xz
        - JDK="${TARGET_JDK}"
        - source ~/.install-jdk-travis.sh
        - flutter doctor -v
      before_script:
        - pub global activate screenshots
        - ./internal/android-wait-for-emulator.sh
        - adb shell getprop ro.product.cpu.abi # 'x86_64' (device)
        - adb shell getprop ro.hardware # 'ranchu' (emulator)
        - adb shell getprop ro.build.characteristics # 'emulator' (emulator)
        - adb shell getprop ro.build.version.release # '9' (emulator)
        - adb shell getprop ro.build.version.sdk # '28' (emulator))
        - adb shell getprop
      script:
        - screenshots -v